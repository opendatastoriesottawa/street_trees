CREATE TABLE trees.roads
(OBJECTID LONG, ROAD_NAME_FULL VARCHAR(50));

LOAD DATA LOCAL INFILE 'D:/Dougall/OpenDataStories/Posts/street_trees/ROAD_NUMS_SMALL.csv' INTO TABLE trees.roads
FIELDS TERMINATED BY ','
OPTIONALLY ENCLOSED BY '"'
LINES TERMINATED BY '\r\n'
(OBJECTID, ROAD_NAME_FULL);

CREATE TABLE trees.tree_inventory_small
(OBJECTID LONG, WARD VARCHAR(5), ADDNUM VARCHAR(15), ADDSTR VARCHAR(15), STREET VARCHAR(50));

LOAD DATA LOCAL INFILE 'D:/Dougall/OpenDataStories/Posts/street_trees/tree-inventory_small.csv' INTO TABLE trees.tree_inventory_small
FIELDS TERMINATED BY ','
OPTIONALLY ENCLOSED BY '"'
LINES TERMINATED BY '\r\n'
(OBJECTID, WARD, ADDNUM, ADDSTR, STREET);

#to verify that road ids line up with the road numbers listed on the trees dataset
CREATE TABLE TREES.ROADS_CHECK AS
SELECT A.*, B.OBJECTID as ROAD_ID, B.ROAD_NAME_FULL
FROM
TREES.TREE_INVENTORY_SMALL AS A
INNER JOIN TREES.ROADS AS B
ON A.ADDSTR=B.OBJECTID;

CREATE TABLE TREES.ROADS_CHECK2 AS
SELECT *
FROM TREES.ROADS_CHECK
WHERE STREET <> "None" and STREET RLIKE '^[A-Z]';



#So that did not work, time for plan b
CREATE TABLE TREES.PLAN_B AS
SELECT * FROM TREES.TREE_INVENTORY_SMALL
WHERE STREET <> "None" and STREET <> "null" and STREET RLIKE '^[A-Z]';

CREATE TABLE TREES.PLAN_B2 AS
SELECT DISTINCT STREET, ADDSTR
FROM TREES.PLAN_B;

#join the unique street names back on the main file to try to build a better street name grouping
CREATE TABLE TREES.TREE_INVENTORY_EXPAND AS
SELECT A.*, B.STREET AS STREET_EXP
FROM
TREES.TREE_INVENTORY_SMALL AS A
LEFT OUTER JOIN
TREES.PLAN_B2 AS B
ON A.ADDSTR=B.ADDSTR;

CREATE TABLE TREES.TREE_INVENTORY_EXPAND2 AS
SELECT A.*, B.STREET AS STREET_EXP
FROM
TREES.TREE_INVENTORY_SMALL AS A
INNER JOIN
TREES.PLAN_B2 AS B
ON A.ADDSTR=B.ADDSTR;

#check the counts
SELECT COUNT(*) 
FROM TREES.TREE_INVENTORY_EXPAND
WHERE STREET_EXP <> "None";
#124,691 from left outer join

SELECT COUNT(*) 
FROM TREES.TREE_INVENTORY_EXPAND;

SELECT COUNT(*) 
FROM TREES.TREE_INVENTORY_EXPAND2
WHERE STREET_EXP <> "None";

SELECT COUNT(*) 
FROM TREES.TREE_INVENTORY_EXPAND2;

SELECT COUNT(*)
FROM TREES.TREE_INVENTORY_SMALL;